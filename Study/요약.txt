CMGClient
엔진의 메인을 담당하는 클래스 (메시지/그래픽/네트워크/디버깅/App)에 필요한 모든 요소가 모이고 관리
App에 필요한 요소를 등록 생성하는것에 관련된 메소드는 모두 재정의를 통해서 이루어지고 자신이 등록할 요소들에 대한 메소드만 재정의하여 등록

CMGObject
모든 객체들의 기반이 되는 클래스 컨트롤/Dialog의 기반 클래스 & 오브젝트의 기본정보와 메시지를 관리
자신의 id / Style or Type 에 대한 정보 영역과 위치 및 깊이 상위에 관한 정보 스프라이트 Visible 속성을 가지며 모든 오브젝트가 공통적으로 사용하는 메시지도 관리

CMGScene
Scene 안에서 하는 모든 행동 마우스 / OnOff Dialog 


싱글톤 클래스를 사용한 이유???
여러 다른클래스에서 여러 다른 클래스에서 이 CSample_List 에 대해 new 키워드를 시간과 메모리를 줄이기 위해 사용


 m_DialogFactory.LoadTable("scene1.xml", LOADTABLE_CREATE);


네트워크 동기 / 비동기

동기 : 동기란 동시에 일어난다는 의미 => 요청과 그결과가 동시에 일어나는 약속. 요청시 그자리에서 결과가 주어져야 한다는 말 동기방식으로 하겠다는것은 시간이 얼마가
걸리든 요청한 그 자리에서 결과를 주겠다는 약속 => 요청과 결과가 한자리에서 동시에 일어난다는 말.

동기식 전송은 한 문자 단위가 아니라 미리 정해진 수 만큼의 문자열을 한 묶음으로 만들어서 일시에 전송하는 방법이다. 이 방법에서는 데이터와는 별도로 송신측과 수신측이 하나의 기준 클록으로 동기신호를 맞추어 동작한다. 
수신측에서는 클록에 의해 비트를 구별하게 되므로, 동기식 전송을 위해서는 데이터와 클록을 위한 2회선이 필요하다. 
송신측에서 2진 데이터들을 정상적인 속도로 내 보내면, 수신측에서는 클록의 한 사이클 간격으로 데이터를 인식하는 것이다. 
동기식 전송은 비동기식에 비해 전송효율이 높다는 것이 장점이지만 수신측에서 비트 계산을 해야하며, 문자를 조립하는 별도의 기억장치가 필요하므로 가격이 다소 높은 것이 단점이다


비동기 : 비동기란 말은 그대로 동시에 일어나지 않는다는 의미 => 요청과 그 결과가 동시에 일어나지 않을 거라는 약속 => 요청한 그 자리에서 바로 결과가 주어지는게
아니라 나중에 준다는 약속

에디터 내에 동기신호를 포함시켜 데이터를 전송한다. 송신측의 송신 클록에 관계없이 수신신호 클록으로 타임 슬롯의 간격을 식별하여 한번에 한 문자씩 송수신한다. 
이때 문자는 7~8 비트로 구성되며, 문자의 앞에 시작비트 (start bit)를, 끝에는 정지비트 (stop bit)를 첨가해서 보내는 방법이다. 
비동기식 전송은 시작비트와 정지비트 사이의 간격이 가변적이므로 불규칙적인 전송에 적합하다. 또한 필요한 접속장치와 기기들이 간단하므로 동기식전송 장비보다 값이 싸다는 장점이 있다.
